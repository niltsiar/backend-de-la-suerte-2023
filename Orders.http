### Send order with empty dishes
POST http://localhost:8080/orders
Content-Type: application/json

{
"table": 1,
"dishes": []
}

> {%
client.test("Request executed successfully", function () {
client.assert(response.status === 422, "Response status is not 422");
});
%}

### Send correct order
POST http://localhost:8080/orders
Content-Type: application/json

{
"table": 1,
"dishes": [
{
"name": "Test dish",
"quantity": 2
},
{
"name": "Other test dish",
"quantity": 3
}
]
}

> {%
client.test("Request executed successfully", function () {
client.assert(response.status === 201, "Response status is not 201");
});
%}

### Get all orders
GET http://localhost:8080/orders
Content-Type: application/json

> {%
client.test("Request executed successfully", function () {
client.assert(response.status === 200, "Response status is not 200");
});
%}

### Clear all orders
GET http://localhost:8080/clear
Content-Type: application/json

> {%
client.test("Request executed successfully", function () {
client.assert(response.status === 200, "Response status is not 200");
});
%}

### Send special zombie
POST http://localhost:8080/orders
Content-Type: application/json

{
"table": 333,
"dishes": [
{
"name": "ESPECIAL ZOMBIE",
"quantity": 2
}
]
}

> {%
client.test("Request executed successfully", function () {
client.assert(response.status === 201, "Response status is not 201");
});
%}
